AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  candidate51-task1-stack

  Sample SAM Template for candidate51-task1-stack

Globals:
  Function:
    Timeout: 300

    LoggingConfig:
      LogFormat: JSON
  
Parameters: 
  BucketName:
    Type: String
  StackBucketName:
    Type: String


Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref StackBucketName

  imgGenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: img_gen_function/
      Handler: generate_image.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Policies:
        - Statement:
          - Effect: Allow
            Action: "bedrock:InvokeModel"
            Resource: 
              - !Sub "arn:aws:bedrock:us-east-1:${AWS::AccountId}:model/amazon.titan-image-generator-v1"
          - Effect: Allow
            Action: "s3:PutObject"
            Resource: 
              - !Sub "arn:aws:s3:::${BucketName}/51/task1/*"
          - Effect: Allow
            Action: 
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: 
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-imgGenFunction:*"
      Environment:
        Variables:
          BUCKET_NAME: !Ref BucketName
      Events:
        imgGen:
          Type: Api
          Properties:
            Path: /generate-image
            Method: post

Outputs:
  imgGenApi:
    Description: API Gateway endpoint URL for Prod stage for Image Generation function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-image/"
  imgGenFunction:
    Description: Image Generation Lambda Function ARN
    Value: !GetAtt imgGenFunction.Arn
  imgGenFunctionIamRole:
    Description: Implicit IAM Role created for Image Generation function
    Value: !GetAtt imgGenFunctionRole.Arn
